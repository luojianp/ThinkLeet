Given a string containing only digits, restore it by returning all possible valid IP address combinations.
For example: Given ”25525511135”,
return [”255.255.11.135”, ”255.255.111.35”]. (Order does not matter)


变式：
(1)切分string，保证所有子段是回文
1（返回所有可能的切分结果10.1 Palindrome Partitioning）:
方法1：深搜1 每个间隔切或不切，整体搜索是个二叉树，时间复杂度 o(2^n) 空间复杂度o(n)
方法2:深搜每轮做一个 for循环，判断指定位置是否切，注意这里的时间复杂度分析比较困难一点（可以认为其实在每个for中
就会产生2^n个情况需要考虑），时间复杂度也是o(2^n)
方法3：动归: f[i][j] = s[i] == s[j] && f[i-1][j-1] ;  时间复杂度o(n^2)空间复杂度o(n)可以用滚动数组。
2（返回最小cut的结果13.3 Palindrome Partitioning II），动归做比较好，时空复杂度较低。

（2）推广切子集问题，可以定义任何领域的知识：切出正确IP (10.6 Restore IP Addresses)
加上领域知识剪枝和验证是否到达结果。
(3)编程之美的分石头问题，具体想不起来，可以到时找下资料。
（4）字符串中切出，字典中包含的字符串
1求最小切分路径。13.12 Word Break
2求路径本身.13.13 Word Break II
