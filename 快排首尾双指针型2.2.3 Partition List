Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater
than or equal to x.
You should preserve the original relative order of the nodes in each of the two partitions.
For example, Given 1->4->3->2->5->2 and x = 3, return 1->2->2->4->3->5.
解法：  两个指针，左侧尾插，右侧头插： 时间复杂度o(n) 空间复杂度o(1)
        计数器法：hash缓存结果：时间复杂度o(n)空间复杂度o(k) k为不同的颜色数
        更不好的方法：直接进行排序时间复杂度o(nlgn)空间复杂度o(1)  由于重复颜色多，造成存在大量冗余运算，这样造成这个方法的效果并
        不好。


变式：
（1）快排：本质是快排中的一轮分区方法
（2）3类不同元素型（之前两题都是两类不同元素）（6.7 Sort Colors）:
（3）推广k类：
方法1：即为快排，然后自定义一个比较大小的表，
方法2：为了加速可以，借鉴（2）中3元素的方法。一次能够分三个类，然后记录start end递归除两边类之外的剩下元素。
（4）并行化：
类似terasort的思想：hash分区，然后每个分区最终排出k个bucket，然后reduce最后合并不同mapper中的相应bucket

