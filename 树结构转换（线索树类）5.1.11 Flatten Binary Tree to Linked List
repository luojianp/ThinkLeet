Given a binary tree, flatten it to a linked list in-place.
For example, Given
     1
   /  \
  2     5
/   \     \
3   4       6
The flattened tree should look like:
1
  \
    2
      \
        3
          \
            4
              \
                5
                  \
                    6
                    
变式：
（1）线索二叉树：1加线索 2遍历
（2）右指针指向右侧兄弟
（常数空间做，则不可以递归：5.1.12 Populating Next Right Pointers in Each Node II）
Note: You may only use constant extra space.
For example, Given the following binary tree,
1
/ \
2 3
/ \ \
4 5 7
After calling your function, the tree should look like:
1 -> NULL
/ \
2 -> 3 -> NULL
/ \ \
4-> 5 -> 7 -> NULL
（完全二叉树，也是常数空间，但是可以用的递归做的 5.4.6 Populating Next Right Pointers in Each Node：）
• You may only use constant extra space.
• You may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent
has two children).
For example, Given the following perfect binary tree,
1
/ \
2 3
/ \ / \
4 5 6 7
After calling your function, the tree should look like:
1 -> NULL
/ \
2 -> 3 -> NULL
/ \ / \
4->5->6->7 -> NULL
