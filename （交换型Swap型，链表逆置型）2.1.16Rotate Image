You are given an n  n 2D matrix representing an image.
Rotate the image by 90 degrees (clockwise).
Follow up: Could you do this in-place?
解法：先左右旋转，再副对角线旋转（可以画图对照）时间复杂度o(mn/2) 空间复杂度o(1)


变式：
（1）一维：单个一维整数序列字符序列，一个整数的位序列（15.1 Reverse Integer这个就是工程实现上的细节不同）。 reverse。夹逼，时间复杂度o(n)空间复杂度o(1)
 (2) 多维：由于不太好呈像，暂时不想。
 （3）链表逆置问题：
 1直接逆置型：头插法： 时间复杂度o(n) 空间复杂度o(1)
 2交替逆置型（2.2.2 Reverse Linked List II）：
 3分块（区）逆置型:
 3.1(一块两个元素2.2.8 Swap Nodes in Pairs):最外层循环快慢指针，控制分区大小，然后内部循环相当于直接逆置中的头插法。
 3.2(一块k个元素2.2.9 Reverse Nodes in k-Group)：
 3.3 前k或者后k逆置（2.2.6 Rotate List），指针暂存历史，然后用1中直接逆置的方法进行逆置。
 
 
 （3）并行化：
 例如：切分为4块。
 第一轮：逻辑转换。数据并不用动。
 第二轮：对角映射转换，本分区内进行对角转换即可。
